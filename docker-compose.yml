services:
  db:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-workxplorer}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports: ["5432:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\""]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: [.env]
    environment:
      DJANGO_SETTINGS_MODULE: core.settings.dev
      # Можно так, либо через DB_* из .env
      # DATABASE_URL: postgis://postgres:postgres@db:5432/workxplorer
    depends_on:
      db:
        condition: service_healthy
    ports: ["8000:8000"]
    working_dir: /app/workxplorer_backend
    volumes:
      - ./workxplorer_backend:/app/workxplorer_backend:delegated
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        gunicorn core.wsgi:application -b 0.0.0.0:8000 -w 3 --timeout 120
      "

volumes:
  pgdata: